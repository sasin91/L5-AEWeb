parameters:
    bin_dir: "./vendor/bin"
    git_dir: "."
    hooks_dir: ~
    hooks_preset: local
    git_hook_variables:
         VAGRANT_HOST_DIR: .
         VAGRANT_PROJECT_DIR: /var/www
         EXEC_GRUMPHP_COMMAND: "docker-compose run --rm --no-deps app"
    stop_on_failure: false
    ignore_unstaged_changes: false
    hide_circumvention_tip: false
    process_async_limit: 10
    process_async_wait: 1000
    process_timeout: 60
    tasks:
        composer:
            file: ./composer.json
            no_check_all: false
            no_check_lock: false
            no_check_publish: false
            no_local_repository: false
            with_dependencies: false
            strict: false
        git_blacklist:
            keywords:
                - "die("
                - "var_dump("
                - "exit;"
                - "dump("
                - "dd("
                - "logger("
                - "Log::debug("
            whitelist_patterns: []
            triggered_by: ['php']
            regexp_type: G
        phpcs:
            standard: ['PSR2']
            severity: ~
            error_severity: ~
            warning_severity: 8
            tab_width: ~
            report: full
            report_width: ~
            whitelist_patterns: 
                - /^app\/(.*)/
                - /^tests\/(.*)/
                - /^routes\/(.*)/
                - /^config\/(.*)/
            encoding: ~
            ignore_patterns: []
            sniffs: []
            triggered_by: [php]
        securitychecker:
            lockfile: ./composer.lock
            format: ~
            end_point: ~
            timeout: ~
            run_always: false
        # awaiting https://github.com/phpro/grumphp/pull/618 to get merged so the EXEC_GRUMPHP_COMMAND parameter will have an effect,
        # allowing PHPUnit to get executed inside a docker container.
        # phpunit:
        #     config_file: ~
        #     testsuite: ~
        #     group: []
        #     always_execute: false